{"version":3,"file":"CreateApiDocs-DOhbI_gm.js","sources":["../../src/components/collections/docs/CreateApiDocs.svelte"],"sourcesContent":["<script>\n    import CodeBlock from \"@/components/base/CodeBlock.svelte\";\n    import FieldsQueryParam from \"@/components/collections/docs/FieldsQueryParam.svelte\";\n    import SdkTabs from \"@/components/base/SdkTabs.svelte\";\n    import ApiClient from \"@/utils/ApiClient\";\n    import CommonHelper from \"@/utils/CommonHelper\";\n\n    export let collection;\n\n    let responseTab = 200;\n    let responses = [];\n\n    $: isAuth = collection.type === \"auth\";\n\n    $: superusersOnly = collection?.createRule === null;\n\n    $: excludedTableFields = isAuth ? [\"password\", \"verified\", \"email\", \"emailVisibility\"] : [];\n\n    $: tableFields =\n        collection?.fields?.filter((f) => {\n            return !f.hidden && f.type != \"autodate\" && !excludedTableFields.includes(f.name);\n        }) || [];\n\n    $: backendAbsUrl = CommonHelper.getApiExampleUrl(ApiClient.baseURL);\n\n    $: responses = [\n        {\n            code: 200,\n            body: JSON.stringify(CommonHelper.dummyCollectionRecord(collection), null, 2),\n        },\n        {\n            code: 400,\n            body: `\n                {\n                  \"status\": 400,\n                  \"message\": \"Failed to create record.\",\n                  \"data\": {\n                    \"${collection?.fields?.[0]?.name}\": {\n                      \"code\": \"validation_required\",\n                      \"message\": \"Missing required value.\"\n                    }\n                  }\n                }\n            `,\n        },\n        {\n            code: 403,\n            body: `\n                {\n                  \"status\": 403,\n                  \"message\": \"You are not allowed to perform this request.\",\n                  \"data\": {}\n                }\n            `,\n        },\n    ];\n\n    function getPayload(collection) {\n        let payload = CommonHelper.dummyCollectionSchemaData(collection, true);\n\n        if (isAuth) {\n            payload.password = \"12345678\";\n            payload.passwordConfirm = \"12345678\";\n            delete payload.verified;\n        }\n\n        return payload;\n    }\n</script>\n\n<h3 class=\"m-b-sm\">Create ({collection.name})</h3>\n<div class=\"content txt-lg m-b-sm\">\n    <p>Create a new <strong>{collection.name}</strong> record.</p>\n    <p>\n        Body parameters could be sent as <code>application/json</code> or\n        <code>multipart/form-data</code>.\n    </p>\n    <p>\n        File upload is supported only via <code>multipart/form-data</code>.\n        <br />\n        For more info and examples you could check the detailed\n        <a href={import.meta.env.PB_FILE_UPLOAD_DOCS} target=\"_blank\" rel=\"noopener noreferrer\">\n            Files upload and handling docs\n        </a>.\n    </p>\n</div>\n\n<!-- prettier-ignore -->\n<SdkTabs\n    js={`\nimport PocketBase from 'pocketbase';\n\nconst pb = new PocketBase('${backendAbsUrl}');\n\n...\n\n// example create data\nconst data = ${JSON.stringify(getPayload(collection), null, 4)};\n\nconst record = await pb.collection('${collection?.name}').create(data);\n` + (isAuth ?\n`\n// (optional) send an email verification request\nawait pb.collection('${collection?.name}').requestVerification('test@example.com');\n` : \"\"\n)}\n    dart={`\nimport 'package:pocketbase/pocketbase.dart';\n\nfinal pb = PocketBase('${backendAbsUrl}');\n\n...\n\n// example create body\nfinal body = <String, dynamic>${JSON.stringify(getPayload(collection), null, 2)};\n\nfinal record = await pb.collection('${collection?.name}').create(body: body);\n` + (isAuth ?\n`\n// (optional) send an email verification request\nawait pb.collection('${collection?.name}').requestVerification('test@example.com');\n` : \"\"\n)}\n/>\n\n<h6 class=\"m-b-xs\">API details</h6>\n<div class=\"alert alert-success\">\n    <strong class=\"label label-primary\">POST</strong>\n    <div class=\"content\">\n        <p>\n            /api/collections/<strong>{collection.name}</strong>/records\n        </p>\n    </div>\n    {#if superusersOnly}\n        <p class=\"txt-hint txt-sm txt-right\">Requires superuser <code>Authorization:TOKEN</code> header</p>\n    {/if}\n</div>\n\n<div class=\"section-title\">Body Parameters</div>\n<table class=\"table-compact table-border m-b-base\">\n    <thead>\n        <tr>\n            <th>Param</th>\n            <th>Type</th>\n            <th width=\"50%\">Description</th>\n        </tr>\n    </thead>\n    <tbody>\n        {#if isAuth}\n            <tr>\n                <td colspan=\"3\" class=\"txt-hint txt-bold\">Auth specific fields</td>\n            </tr>\n            <tr>\n                <td>\n                    <div class=\"inline-flex\">\n                        {#if collection?.fields?.find((f) => f.name == \"email\")?.required}\n                            <span class=\"label label-success\">Required</span>\n                        {:else}\n                            <span class=\"label label-warning\">Optional</span>\n                        {/if}\n                        <span>email</span>\n                    </div>\n                </td>\n                <td>\n                    <span class=\"label\">String</span>\n                </td>\n                <td>Auth record email address.</td>\n            </tr>\n            <tr>\n                <td>\n                    <div class=\"inline-flex\">\n                        {#if collection?.fields?.find((f) => f.name == \"emailVisibility\")?.required}\n                            <span class=\"label label-success\">Required</span>\n                        {:else}\n                            <span class=\"label label-warning\">Optional</span>\n                        {/if}\n                        <span>emailVisibility</span>\n                    </div>\n                </td>\n                <td>\n                    <span class=\"label\">Boolean</span>\n                </td>\n                <td>Whether to show/hide the auth record email when fetching the record data.</td>\n            </tr>\n            <tr>\n                <td>\n                    <div class=\"inline-flex\">\n                        <span class=\"label label-success\">Required</span>\n                        <span>password</span>\n                    </div>\n                </td>\n                <td>\n                    <span class=\"label\">String</span>\n                </td>\n                <td>Auth record password.</td>\n            </tr>\n            <tr>\n                <td>\n                    <div class=\"inline-flex\">\n                        <span class=\"label label-success\">Required</span>\n                        <span>passwordConfirm</span>\n                    </div>\n                </td>\n                <td>\n                    <span class=\"label\">String</span>\n                </td>\n                <td>Auth record password confirmation.</td>\n            </tr>\n            <tr>\n                <td>\n                    <div class=\"inline-flex\">\n                        <span class=\"label label-warning\">Optional</span>\n                        <span>verified</span>\n                    </div>\n                </td>\n                <td>\n                    <span class=\"label\">Boolean</span>\n                </td>\n                <td>\n                    Indicates whether the auth record is verified or not.\n                    <br />\n                    This field can be set only by superusers or auth records with \"Manage\" access.\n                </td>\n            </tr>\n            <tr>\n                <td colspan=\"3\" class=\"txt-hint txt-bold\">Other fields</td>\n            </tr>\n        {/if}\n\n        {#each tableFields as field (field.name)}\n            <tr>\n                <td>\n                    <div class=\"inline-flex\">\n                        {#if !field.required || (field.type == \"text\" && field.autogeneratePattern)}\n                            <span class=\"label label-warning\">Optional</span>\n                        {:else}\n                            <span class=\"label label-success\">Required</span>\n                        {/if}\n                        <span>{field.name}</span>\n                    </div>\n                </td>\n                <td>\n                    <span class=\"label\">{CommonHelper.getFieldValueType(field)}</span>\n                </td>\n                <td>\n                    {#if field.type === \"text\"}\n                        Plain text value.\n                        {#if field.autogeneratePattern}\n                            It is autogenerated if not set.\n                        {/if}\n                    {:else if field.type === \"number\"}\n                        Number value.\n                    {:else if field.type === \"json\"}\n                        JSON array or object.\n                    {:else if field.type === \"email\"}\n                        Email address.\n                    {:else if field.type === \"url\"}\n                        URL address.\n                    {:else if field.type === \"geoPoint\"}\n                        <code>{`{\"lon\":x,\"lat\":y}`}</code> object.\n                    {:else if field.type === \"file\"}\n                        File object.<br />\n                        Set to empty value (<code>null</code>, <code>\"\"</code> or <code>[]</code>) to delete\n                        already uploaded file(s).\n                    {:else if field.type === \"relation\"}\n                        Relation record {field.maxSelect === 1 ? \"id\" : \"ids\"}.\n                    {/if}\n                </td>\n            </tr>\n        {/each}\n    </tbody>\n</table>\n\n<div class=\"section-title\">Query parameters</div>\n<table class=\"table-compact table-border m-b-base\">\n    <thead>\n        <tr>\n            <th>Param</th>\n            <th>Type</th>\n            <th width=\"60%\">Description</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>expand</td>\n            <td>\n                <span class=\"label\">String</span>\n            </td>\n            <td>\n                Auto expand relations when returning the created record. Ex.:\n                <CodeBlock content={`?expand=relField1,relField2.subRelField`} />\n                Supports up to 6-levels depth nested relations expansion. <br />\n                The expanded relations will be appended to the record under the\n                <code>expand</code> property (eg. <code>{`\"expand\": {\"relField1\": {...}, ...}`}</code>).\n                <br />\n                Only the relations to which the request user has permissions to <strong>view</strong> will be expanded.\n            </td>\n        </tr>\n        <FieldsQueryParam />\n    </tbody>\n</table>\n\n<div class=\"section-title\">Responses</div>\n<div class=\"tabs\">\n    <div class=\"tabs-header compact combined left\">\n        {#each responses as response (response.code)}\n            <button\n                class=\"tab-item\"\n                class:active={responseTab === response.code}\n                on:click={() => (responseTab = response.code)}\n            >\n                {response.code}\n            </button>\n        {/each}\n    </div>\n    <div class=\"tabs-content\">\n        {#each responses as response (response.code)}\n            <div class=\"tab-item\" class:active={responseTab === response.code}>\n                <CodeBlock content={response.body} />\n            </div>\n        {/each}\n    </div>\n</div>\n"],"names":["insert","target","p","anchor","show_if_1","ctx","show_if","tr0","tr1","append","td1","div0","span0","td2","td3","tr2","td4","div1","span2","td5","td6","tr3","tr4","tr5","tr6","span","t1_value","dirty","set_data","t1","br","code0","code1","code2","code","if_block","create_if_block_1","CommonHelper","create_if_block_9","create_if_block","create_if_block_2","create_if_block_3","create_if_block_4","create_if_block_5","create_if_block_6","create_if_block_7","create_if_block_8","tr","td0","div","span1","t3","t3_value","t0_value","button","t0","codeblock_changes","t5_value","t27_value","_a","_b","_c","_d","create_if_block_13","create_if_block_10","get_key","i","get_key_1","get_key_2","h3","p0","strong0","p1","p2","h6","div2","strong1","p3","strong2","div3","table0","thead0","tbody0","div4","table1","thead1","tbody1","br1","code3","code4","br2","strong3","div5","div8","div6","div7","current","t5","t27","func","f","func_1","collection","$$props","responseTab","responses","getPayload","payload","isAuth","response","superusersOnly","$$invalidate","excludedTableFields","tableFields","backendAbsUrl","ApiClient"],"mappings":"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"}