{"version":3,"file":"FilterAutocompleteInput-BjsJZjsb.js","sources":["../../node_modules/@codemirror/legacy-modes/mode/simple-mode.js","../../src/components/base/FilterAutocompleteInput.svelte"],"sourcesContent":["export function simpleMode(states) {\n  ensureState(states, \"start\");\n  var states_ = {}, meta = states.languageData || {}, hasIndentation = false;\n  for (var state in states) if (state != meta && states.hasOwnProperty(state)) {\n    var list = states_[state] = [], orig = states[state];\n    for (var i = 0; i < orig.length; i++) {\n      var data = orig[i];\n      list.push(new Rule(data, states));\n      if (data.indent || data.dedent) hasIndentation = true;\n    }\n  }\n  return {\n    name: meta.name,\n    startState: function() {\n      return {state: \"start\", pending: null, indent: hasIndentation ? [] : null};\n    },\n    copyState: function(state) {\n      var s = {state: state.state, pending: state.pending, indent: state.indent && state.indent.slice(0)};\n      if (state.stack)\n        s.stack = state.stack.slice(0);\n      return s;\n    },\n    token: tokenFunction(states_),\n    indent: indentFunction(states_, meta),\n    mergeTokens: meta.mergeTokens,\n    languageData: meta\n  }\n};\n\nfunction ensureState(states, name) {\n  if (!states.hasOwnProperty(name))\n    throw new Error(\"Undefined state \" + name + \" in simple mode\");\n}\n\nfunction toRegex(val, caret) {\n  if (!val) return /(?:)/;\n  var flags = \"\";\n  if (val instanceof RegExp) {\n    if (val.ignoreCase) flags = \"i\";\n    val = val.source;\n  } else {\n    val = String(val);\n  }\n  return new RegExp((caret === false ? \"\" : \"^\") + \"(?:\" + val + \")\", flags);\n}\n\nfunction asToken(val) {\n  if (!val) return null;\n  if (val.apply) return val\n  if (typeof val == \"string\") return val.replace(/\\./g, \" \");\n  var result = [];\n  for (var i = 0; i < val.length; i++)\n    result.push(val[i] && val[i].replace(/\\./g, \" \"));\n  return result;\n}\n\nfunction Rule(data, states) {\n  if (data.next || data.push) ensureState(states, data.next || data.push);\n  this.regex = toRegex(data.regex);\n  this.token = asToken(data.token);\n  this.data = data;\n}\n\nfunction tokenFunction(states) {\n  return function(stream, state) {\n    if (state.pending) {\n      var pend = state.pending.shift();\n      if (state.pending.length == 0) state.pending = null;\n      stream.pos += pend.text.length;\n      return pend.token;\n    }\n\n    var curState = states[state.state];\n    for (var i = 0; i < curState.length; i++) {\n      var rule = curState[i];\n      var matches = (!rule.data.sol || stream.sol()) && stream.match(rule.regex);\n      if (matches) {\n        if (rule.data.next) {\n          state.state = rule.data.next;\n        } else if (rule.data.push) {\n          (state.stack || (state.stack = [])).push(state.state);\n          state.state = rule.data.push;\n        } else if (rule.data.pop && state.stack && state.stack.length) {\n          state.state = state.stack.pop();\n        }\n\n        if (rule.data.indent)\n          state.indent.push(stream.indentation() + stream.indentUnit);\n        if (rule.data.dedent)\n          state.indent.pop();\n        var token = rule.token\n        if (token && token.apply) token = token(matches)\n        if (matches.length > 2 && rule.token && typeof rule.token != \"string\") {\n          state.pending = [];\n          for (var j = 2; j < matches.length; j++)\n            if (matches[j])\n              state.pending.push({text: matches[j], token: rule.token[j - 1]});\n          stream.backUp(matches[0].length - (matches[1] ? matches[1].length : 0));\n          return token[0];\n        } else if (token && token.join) {\n          return token[0];\n        } else {\n          return token;\n        }\n      }\n    }\n    stream.next();\n    return null;\n  };\n}\n\nfunction indentFunction(states, meta) {\n  return function(state, textAfter) {\n    if (state.indent == null || meta.dontIndentStates && meta.dontIndentStates.indexOf(state.state) > -1)\n      return null\n\n    var pos = state.indent.length - 1, rules = states[state.state];\n    scan: for (;;) {\n      for (var i = 0; i < rules.length; i++) {\n        var rule = rules[i];\n        if (rule.data.dedent && rule.data.dedentIfLineStart !== false) {\n          var m = rule.regex.exec(textAfter);\n          if (m && m[0]) {\n            pos--;\n            if (rule.next || rule.push) rules = states[rule.next || rule.push];\n            textAfter = textAfter.slice(m[0].length);\n            continue scan;\n          }\n        }\n      }\n      break;\n    }\n    return pos < 0 ? 0 : state.indent[pos];\n  };\n}\n","<script>\n    /**\n     * @todo consider combining with the CodeEditor component.\n     *\n     * This component uses Codemirror editor under the hood and its a \"little heavy\".\n     * To allow manuall chunking it is recommended to load the component lazily!\n     *\n     * Example usage:\n     * ```\n     * <script>\n     * import { onMount } from \"svelte\";\n     *\n     * let inputComponent;\n     *\n     * onMount(async () => {\n     *     try {\n     *         inputComponent = (await import(\"@/components/base/FilterAutocompleteInput.svelte\")).default;\n     *     } catch (err) {\n     *         console.warn(err);\n     *     }\n     * });\n     * <//script>\n     *\n     * ...\n     *\n     * <svelte:component\n     *     this={inputComponent}\n     *     bind:value={value}\n     *     baseCollection={baseCollection}\n     *     disabled={disabled}\n     * />\n     * ```\n     */\n    import { onMount, createEventDispatcher } from \"svelte\";\n    import { collections } from \"@/stores/collections\";\n    import CommonHelper from \"@/utils/CommonHelper\";\n    import AutocompleteWorker from \"@/autocomplete.worker.js?worker\";\n    // code mirror imports\n    // ---\n    import {\n        keymap,\n        highlightSpecialChars,\n        drawSelection,\n        dropCursor,\n        rectangularSelection,\n        highlightActiveLineGutter,\n        EditorView,\n        placeholder as placeholderExt,\n    } from \"@codemirror/view\";\n    import { EditorState, Compartment } from \"@codemirror/state\";\n    import {\n        defaultHighlightStyle,\n        syntaxHighlighting,\n        bracketMatching,\n        StreamLanguage,\n        syntaxTree,\n    } from \"@codemirror/language\";\n    import { defaultKeymap, indentWithTab, history, historyKeymap } from \"@codemirror/commands\";\n    import { searchKeymap, highlightSelectionMatches } from \"@codemirror/search\";\n    import {\n        autocompletion,\n        completionKeymap,\n        closeBrackets,\n        closeBracketsKeymap,\n    } from \"@codemirror/autocomplete\";\n    import { simpleMode } from \"@codemirror/legacy-modes/mode/simple-mode\";\n    // ---\n\n    const dispatch = createEventDispatcher();\n\n    export let id = \"\";\n    export let value = \"\";\n    export let disabled = false;\n    export let placeholder = \"\";\n    export let baseCollection = null;\n    export let singleLine = false;\n    export let extraAutocompleteKeys = []; // eg. [\"test1\", \"test2\"]\n    export let disableRequestKeys = false;\n    export let disableCollectionJoinKeys = false;\n\n    let editor;\n    let container;\n    let oldDisabledState = disabled;\n    let langCompartment = new Compartment();\n    let editableCompartment = new Compartment();\n    let readOnlyCompartment = new Compartment();\n    let placeholderCompartment = new Compartment();\n    let autocompleteWorker = new AutocompleteWorker();\n\n    let cachedRequestKeys = [];\n    let cachedCollectionJoinKeys = [];\n    let cachedBaseKeys = [];\n    let baseKeysChangeHash = \"\";\n    let oldBaseKeysChangeHash = \"\";\n\n    $: baseKeysChangeHash = getCollectionKeysChangeHash(baseCollection);\n\n    $: if (\n        !disabled &&\n        (oldBaseKeysChangeHash != baseKeysChangeHash ||\n            disableRequestKeys !== -1 ||\n            disableCollectionJoinKeys !== -1)\n    ) {\n        oldBaseKeysChangeHash = baseKeysChangeHash;\n        refreshCachedKeys();\n    }\n\n    $: if (id) {\n        addLabelListeners();\n    }\n\n    $: if (editor && baseCollection?.fields) {\n        editor.dispatch({\n            effects: [langCompartment.reconfigure(ruleLang())],\n        });\n    }\n\n    $: if (editor && oldDisabledState != disabled) {\n        editor.dispatch({\n            effects: [\n                editableCompartment.reconfigure(EditorView.editable.of(!disabled)),\n                readOnlyCompartment.reconfigure(EditorState.readOnly.of(disabled)),\n            ],\n        });\n        oldDisabledState = disabled;\n        triggerNativeChange();\n    }\n\n    $: if (editor && value != editor.state.doc.toString()) {\n        editor.dispatch({\n            changes: {\n                from: 0,\n                to: editor.state.doc.length,\n                insert: value,\n            },\n        });\n    }\n\n    $: if (editor && typeof placeholder !== \"undefined\") {\n        editor.dispatch({\n            effects: [placeholderCompartment.reconfigure(placeholderExt(placeholder))],\n        });\n    }\n\n    // Focus the editor (if inited).\n    export function focus() {\n        editor?.focus();\n    }\n\n    // Refresh the cached autocomplete keys.\n    // ---\n    let refreshDebounceId = null;\n\n    autocompleteWorker.onmessage = (e) => {\n        cachedBaseKeys = e.data.baseKeys || [];\n        cachedRequestKeys = e.data.requestKeys || [];\n        cachedCollectionJoinKeys = e.data.collectionJoinKeys || [];\n    };\n\n    function refreshCachedKeys() {\n        clearTimeout(refreshDebounceId);\n        refreshDebounceId = setTimeout(() => {\n            autocompleteWorker.postMessage({\n                baseCollection: baseCollection,\n                collections: concatWithBaseCollection($collections),\n                disableRequestKeys: disableRequestKeys,\n                disableCollectionJoinKeys: disableCollectionJoinKeys,\n            });\n        }, 250);\n    }\n    // ---\n\n    // Return a collection keys hash string that can be used to compare with previous states.\n    function getCollectionKeysChangeHash(collection) {\n        return JSON.stringify([collection?.name, collection?.type, collection?.fields]);\n    }\n\n    // Merge the base collection in a new list with the provided collections.\n    function concatWithBaseCollection(collections) {\n        let copy = collections.slice();\n\n        if (baseCollection) {\n            CommonHelper.pushOrReplaceByKey(copy, baseCollection, \"id\");\n        }\n\n        return copy;\n    }\n\n    // Emulate native change event for the editor container element.\n    function triggerNativeChange() {\n        container?.dispatchEvent(\n            new CustomEvent(\"change\", {\n                detail: { value },\n                bubbles: true,\n            }),\n        );\n    }\n\n    // Remove any attached label listeners.\n    function removeLabelListeners() {\n        if (!id) {\n            return;\n        }\n\n        const labels = document.querySelectorAll('[for=\"' + id + '\"]');\n        for (let label of labels) {\n            label.removeEventListener(\"click\", focus);\n        }\n    }\n\n    // Add `<label for=\"ID\">...</label>` focus support.\n    function addLabelListeners() {\n        if (!id) {\n            return;\n        }\n\n        removeLabelListeners();\n\n        const labels = document.querySelectorAll('[for=\"' + id + '\"]');\n        for (let label of labels) {\n            label.addEventListener(\"click\", focus);\n        }\n    }\n\n    // Returns an array with all the supported keys.\n    function getAllKeys(includeRequestKeys = true, includeCollectionJoinKeys = true) {\n        let result = [].concat(extraAutocompleteKeys);\n\n        // add base keys\n        result = result.concat(cachedBaseKeys || []);\n\n        // add @request.* keys\n        if (includeRequestKeys) {\n            result = result.concat(cachedRequestKeys || []);\n        }\n\n        // add @collection.* keys\n        if (includeCollectionJoinKeys) {\n            result = result.concat(cachedCollectionJoinKeys || []);\n        }\n\n        return result;\n    }\n\n    // Returns object with all the completions matching the context.\n    function completions(context) {\n        let word = context.matchBefore(/[\\'\\\"\\@\\w\\.]*/);\n        if (word && word.from == word.to && !context.explicit) {\n            return null;\n        }\n\n        // skip for comments\n        let nodeBefore = syntaxTree(context.state).resolveInner(context.pos, -1);\n        if (nodeBefore?.type?.name == \"comment\") {\n            return null;\n        }\n\n        let options = [\n            { label: \"false\" },\n            { label: \"true\" },\n            { label: \"@now\" },\n            { label: \"@second\" },\n            { label: \"@minute\" },\n            { label: \"@hour\" },\n            { label: \"@year\" },\n            { label: \"@day\" },\n            { label: \"@month\" },\n            { label: \"@weekday\" },\n            { label: \"@yesterday\" },\n            { label: \"@tomorrow\" },\n            { label: \"@todayStart\" },\n            { label: \"@todayEnd\" },\n            { label: \"@monthStart\" },\n            { label: \"@monthEnd\" },\n            { label: \"@yearStart\" },\n            { label: \"@yearEnd\" },\n        ];\n\n        if (!disableCollectionJoinKeys) {\n            options.push({ label: \"@collection.*\", apply: \"@collection.\" });\n        }\n\n        let keys = getAllKeys(\n            !disableRequestKeys && word.text.startsWith(\"@r\"),\n            !disableCollectionJoinKeys && word.text.startsWith(\"@c\"),\n        );\n\n        for (const key of keys) {\n            options.push({\n                label: key.endsWith(\".\") ? key + \"*\" : key,\n                apply: key,\n                boost: key.indexOf(\"_via_\") > 0 ? -1 : 0, // deprioritize _via_ keys\n            });\n        }\n\n        return {\n            from: word.from,\n            options: options,\n        };\n    }\n\n    // Creates a new language mode.\n    // @see https://codemirror.net/5/demo/simplemode.html\n    function ruleLang() {\n        return StreamLanguage.define(\n            simpleMode({\n                start: [\n                    // base literals\n                    {\n                        regex: /true|false|null/,\n                        token: \"atom\",\n                    },\n                    // comments\n                    { regex: /\\/\\/.*/, token: \"comment\" },\n                    // double quoted string\n                    { regex: /\"(?:[^\\\\]|\\\\.)*?(?:\"|$)/, token: \"string\" },\n                    // single quoted string\n                    { regex: /'(?:[^\\\\]|\\\\.)*?(?:'|$)/, token: \"string\" },\n                    // numbers\n                    {\n                        regex: /0x[a-f\\d]+|[-+]?(?:\\.\\d+|\\d+\\.?\\d*)(?:e[-+]?\\d+)?/i,\n                        token: \"number\",\n                    },\n                    // operators\n                    {\n                        regex: /\\&\\&|\\|\\||\\=|\\!\\=|\\~|\\!\\~|\\>|\\<|\\>\\=|\\<\\=/,\n                        token: \"operator\",\n                    },\n                    // indent and dedent properties guide autoindentation\n                    { regex: /[\\{\\[\\(]/, indent: true },\n                    { regex: /[\\}\\]\\)]/, dedent: true },\n                    // keywords\n                    { regex: /\\w+[\\w\\.]*\\w+/, token: \"keyword\" },\n                    { regex: CommonHelper.escapeRegExp(\"@now\"), token: \"keyword\" },\n                    { regex: CommonHelper.escapeRegExp(\"@second\"), token: \"keyword\" },\n                    { regex: CommonHelper.escapeRegExp(\"@minute\"), token: \"keyword\" },\n                    { regex: CommonHelper.escapeRegExp(\"@hour\"), token: \"keyword\" },\n                    { regex: CommonHelper.escapeRegExp(\"@year\"), token: \"keyword\" },\n                    { regex: CommonHelper.escapeRegExp(\"@day\"), token: \"keyword\" },\n                    { regex: CommonHelper.escapeRegExp(\"@month\"), token: \"keyword\" },\n                    { regex: CommonHelper.escapeRegExp(\"@weekday\"), token: \"keyword\" },\n                    { regex: CommonHelper.escapeRegExp(\"@todayStart\"), token: \"keyword\" },\n                    { regex: CommonHelper.escapeRegExp(\"@todayEnd\"), token: \"keyword\" },\n                    { regex: CommonHelper.escapeRegExp(\"@monthStart\"), token: \"keyword\" },\n                    { regex: CommonHelper.escapeRegExp(\"@monthEnd\"), token: \"keyword\" },\n                    { regex: CommonHelper.escapeRegExp(\"@yearStart\"), token: \"keyword\" },\n                    { regex: CommonHelper.escapeRegExp(\"@yearEnd\"), token: \"keyword\" },\n                    { regex: CommonHelper.escapeRegExp(\"@request.method\"), token: \"keyword\" },\n                ],\n                meta: {\n                    lineComment: \"//\",\n                },\n            }),\n        );\n    }\n\n    onMount(() => {\n        const submitShortcut = {\n            key: \"Enter\",\n            run: (_) => {\n                // trigger submit on enter for singleline input\n                if (singleLine) {\n                    dispatch(\"submit\", value);\n                }\n            },\n        };\n\n        addLabelListeners();\n\n        let keybindings = [\n            submitShortcut,\n            ...closeBracketsKeymap,\n            ...defaultKeymap,\n            searchKeymap.find((item) => item.key === \"Mod-d\"),\n            ...historyKeymap,\n            ...completionKeymap,\n        ];\n        if (!singleLine) {\n            keybindings.push(indentWithTab);\n        }\n\n        editor = new EditorView({\n            parent: container,\n            state: EditorState.create({\n                doc: value,\n                extensions: [\n                    highlightActiveLineGutter(),\n                    highlightSpecialChars(),\n                    history(),\n                    drawSelection(),\n                    dropCursor(),\n                    EditorState.allowMultipleSelections.of(true),\n                    syntaxHighlighting(defaultHighlightStyle, { fallback: true }),\n                    bracketMatching(),\n                    closeBrackets(),\n                    rectangularSelection(),\n                    highlightSelectionMatches(),\n                    keymap.of(keybindings),\n                    EditorView.lineWrapping,\n                    autocompletion({\n                        override: [completions],\n                        icons: false,\n                    }),\n                    placeholderCompartment.of(placeholderExt(placeholder)),\n                    editableCompartment.of(EditorView.editable.of(!disabled)),\n                    readOnlyCompartment.of(EditorState.readOnly.of(disabled)),\n                    langCompartment.of(ruleLang()),\n                    EditorState.transactionFilter.of((tr) => {\n                        if (singleLine && tr.newDoc.lines > 1) {\n                            if (!tr.changes?.inserted?.filter((i) => !!i.text.find((t) => t))?.length) {\n                                return []; // only empty lines\n                            }\n                            // it is ok to mutate the current transaction as we don't change the doc length\n                            tr.newDoc.text = [tr.newDoc.text.join(\" \")];\n                        }\n                        return tr;\n                    }),\n                    EditorView.updateListener.of((v) => {\n                        if (!v.docChanged || disabled) {\n                            return;\n                        }\n                        value = v.state.doc.toString();\n                        triggerNativeChange();\n                    }),\n                ],\n            }),\n        });\n\n        return () => {\n            clearTimeout(refreshDebounceId);\n            removeLabelListeners();\n            editor?.destroy();\n            autocompleteWorker.terminate();\n        };\n    });\n</script>\n\n<div bind:this={container} class=\"code-editor\" />\n"],"names":["simpleMode","states","ensureState","states_","meta","hasIndentation","state","list","orig","i","data","Rule","s","tokenFunction","indentFunction","name","toRegex","val","caret","flags","asToken","result","stream","pend","curState","rule","matches","token","j","textAfter","pos","rules","scan","m","insert","target","div","anchor","getCollectionKeysChangeHash","collection","dispatch","createEventDispatcher","id","$$props","value","disabled","placeholder","baseCollection","singleLine","extraAutocompleteKeys","disableRequestKeys","disableCollectionJoinKeys","editor","container","oldDisabledState","langCompartment","Compartment","editableCompartment","readOnlyCompartment","placeholderCompartment","autocompleteWorker","AutocompleteWorker","cachedRequestKeys","cachedCollectionJoinKeys","cachedBaseKeys","baseKeysChangeHash","oldBaseKeysChangeHash","focus","refreshDebounceId","e","refreshCachedKeys","concatWithBaseCollection","$collections","collections","copy","CommonHelper","triggerNativeChange","removeLabelListeners","labels","label","addLabelListeners","getAllKeys","includeRequestKeys","includeCollectionJoinKeys","completions","context","word","nodeBefore","syntaxTree","_a","options","keys","key","ruleLang","StreamLanguage","onMount","submitShortcut","_","keybindings","closeBracketsKeymap","defaultKeymap","searchKeymap","item","historyKeymap","completionKeymap","indentWithTab","$$invalidate","EditorView","EditorState","highlightActiveLineGutter","highlightSpecialChars","history","drawSelection","dropCursor","syntaxHighlighting","defaultHighlightStyle","bracketMatching","closeBrackets","rectangularSelection","highlightSelectionMatches","keymap","autocompletion","placeholderExt","tr","_c","_b","t","v","$$value"],"mappings":"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","x_google_ignoreList":[0]}