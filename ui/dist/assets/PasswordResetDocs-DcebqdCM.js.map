{"version":3,"file":"PasswordResetDocs-DcebqdCM.js","sources":["../../src/components/collections/docs/PasswordResetApiConfirmDocs.svelte","../../src/components/collections/docs/PasswordResetApiRequestDocs.svelte","../../src/components/collections/docs/PasswordResetDocs.svelte"],"sourcesContent":["<script>\n    import CodeBlock from \"@/components/base/CodeBlock.svelte\";\n\n    export let collection;\n\n    let responseTab = 204;\n    let responses = [];\n\n    $: responses = [\n        {\n            code: 204,\n            body: \"null\",\n        },\n        {\n            code: 400,\n            body: `\n                {\n                  \"status\": 400,\n                  \"message\": \"An error occurred while validating the submitted data.\",\n                  \"data\": {\n                    \"token\": {\n                      \"code\": \"validation_required\",\n                      \"message\": \"Missing required value.\"\n                    }\n                  }\n                }\n            `,\n        },\n    ];\n</script>\n\n<div class=\"alert alert-success\">\n    <strong class=\"label label-primary\">POST</strong>\n    <div class=\"content\">\n        <p>\n            /api/collections/<strong>{collection.name}</strong>/confirm-password-reset\n        </p>\n    </div>\n</div>\n\n<div class=\"section-title\">Body Parameters</div>\n<table class=\"table-compact table-border m-b-base\">\n    <thead>\n        <tr>\n            <th>Param</th>\n            <th>Type</th>\n            <th width=\"50%\">Description</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>\n                <div class=\"inline-flex\">\n                    <span class=\"label label-success\">Required</span>\n                    <span>token</span>\n                </div>\n            </td>\n            <td>\n                <span class=\"label\">String</span>\n            </td>\n            <td>The token from the password reset request email.</td>\n        </tr>\n        <tr>\n            <td>\n                <div class=\"inline-flex\">\n                    <span class=\"label label-success\">Required</span>\n                    <span>password</span>\n                </div>\n            </td>\n            <td>\n                <span class=\"label\">String</span>\n            </td>\n            <td>The new password to set.</td>\n        </tr>\n        <tr>\n            <td>\n                <div class=\"inline-flex\">\n                    <span class=\"label label-success\">Required</span>\n                    <span>passwordConfirm</span>\n                </div>\n            </td>\n            <td>\n                <span class=\"label\">String</span>\n            </td>\n            <td>The new password confirmation.</td>\n        </tr>\n    </tbody>\n</table>\n\n<div class=\"section-title\">Responses</div>\n<div class=\"tabs\">\n    <div class=\"tabs-header compact combined left\">\n        {#each responses as response (response.code)}\n            <button\n                class=\"tab-item\"\n                class:active={responseTab === response.code}\n                on:click={() => (responseTab = response.code)}\n            >\n                {response.code}\n            </button>\n        {/each}\n    </div>\n    <div class=\"tabs-content\">\n        {#each responses as response (response.code)}\n            <div class=\"tab-item\" class:active={responseTab === response.code}>\n                <CodeBlock content={response.body} />\n            </div>\n        {/each}\n    </div>\n</div>\n","<script>\n    import CodeBlock from \"@/components/base/CodeBlock.svelte\";\n\n    export let collection;\n\n    let responseTab = 204;\n    let responses = [];\n\n    $: responses = [\n        {\n            code: 204,\n            body: \"null\",\n        },\n        {\n            code: 400,\n            body: `\n                {\n                  \"status\": 400,\n                  \"message\": \"An error occurred while validating the submitted data.\",\n                  \"data\": {\n                    \"email\": {\n                      \"code\": \"validation_required\",\n                      \"message\": \"Missing required value.\"\n                    }\n                  }\n                }\n            `,\n        },\n    ];\n</script>\n\n<div class=\"alert alert-success\">\n    <strong class=\"label label-primary\">POST</strong>\n    <div class=\"content\">\n        <p>\n            /api/collections/<strong>{collection.name}</strong>/request-password-reset\n        </p>\n    </div>\n</div>\n\n<div class=\"section-title\">Body Parameters</div>\n<table class=\"table-compact table-border m-b-base\">\n    <thead>\n        <tr>\n            <th>Param</th>\n            <th>Type</th>\n            <th width=\"50%\">Description</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>\n                <div class=\"inline-flex\">\n                    <span class=\"label label-success\">Required</span>\n                    <span>email</span>\n                </div>\n            </td>\n            <td>\n                <span class=\"label\">String</span>\n            </td>\n            <td>The auth record email address to send the password reset request (if exists).</td>\n        </tr>\n    </tbody>\n</table>\n\n<div class=\"section-title\">Responses</div>\n<div class=\"tabs\">\n    <div class=\"tabs-header compact combined left\">\n        {#each responses as response (response.code)}\n            <button\n                class=\"tab-item\"\n                class:active={responseTab === response.code}\n                on:click={() => (responseTab = response.code)}\n            >\n                {response.code}\n            </button>\n        {/each}\n    </div>\n    <div class=\"tabs-content\">\n        {#each responses as response (response.code)}\n            <div class=\"tab-item\" class:active={responseTab === response.code}>\n                <CodeBlock content={response.body} />\n            </div>\n        {/each}\n    </div>\n</div>\n","<script>\n    import PasswordResetApiConfirmDocs from \"@/components/collections/docs/PasswordResetApiConfirmDocs.svelte\";\n    import PasswordResetApiRequestDocs from \"@/components/collections/docs/PasswordResetApiRequestDocs.svelte\";\n    import SdkTabs from \"@/components/base/SdkTabs.svelte\";\n    import ApiClient from \"@/utils/ApiClient\";\n    import CommonHelper from \"@/utils/CommonHelper\";\n\n    export let collection;\n\n    const apiTabs = [\n        { title: \"Request password reset\", component: PasswordResetApiRequestDocs },\n        { title: \"Confirm password reset\", component: PasswordResetApiConfirmDocs },\n    ];\n\n    let activeApiTab = 0;\n\n    $: backendAbsUrl = CommonHelper.getApiExampleUrl(ApiClient.baseURL);\n</script>\n\n<h3 class=\"m-b-sm\">Password reset ({collection.name})</h3>\n<div class=\"content txt-lg m-b-sm\">\n    <p>Sends <strong>{collection.name}</strong> password reset email request.</p>\n    <p>\n        On successful password reset all previously issued auth tokens for the specific record will be\n        automatically invalidated.\n    </p>\n</div>\n\n<SdkTabs\n    js={`\n        import PocketBase from 'pocketbase';\n\n        const pb = new PocketBase('${backendAbsUrl}');\n\n        ...\n\n        await pb.collection('${collection?.name}').requestPasswordReset('test@example.com');\n\n        // ---\n        // (optional) in your custom confirmation page:\n        // ---\n\n        // note: after this call all previously issued auth tokens are invalidated\n        await pb.collection('${collection?.name}').confirmPasswordReset(\n            'RESET_TOKEN',\n            'NEW_PASSWORD',\n            'NEW_PASSWORD_CONFIRM',\n        );\n    `}\n    dart={`\n        import 'package:pocketbase/pocketbase.dart';\n\n        final pb = PocketBase('${backendAbsUrl}');\n\n        ...\n\n        await pb.collection('${collection?.name}').requestPasswordReset('test@example.com');\n\n        // ---\n        // (optional) in your custom confirmation page:\n        // ---\n\n        // note: after this call all previously issued auth tokens are invalidated\n        await pb.collection('${collection?.name}').confirmPasswordReset(\n          'RESET_TOKEN',\n          'NEW_PASSWORD',\n          'NEW_PASSWORD_CONFIRM',\n        );\n    `}\n/>\n\n<h6 class=\"m-b-xs\">API details</h6>\n<div class=\"tabs\">\n    <div class=\"tabs-header compact\">\n        {#each apiTabs as tab, i}\n            <button class=\"tab-item\" class:active={activeApiTab == i} on:click={() => (activeApiTab = i)}>\n                <div class=\"txt\">{tab.title}</div>\n            </button>\n        {/each}\n    </div>\n    <div class=\"tabs-content\">\n        {#each apiTabs as tab, i}\n            <div class=\"tab-item\" class:active={activeApiTab == i}>\n                <svelte:component this={tab.component} {collection} />\n            </div>\n        {/each}\n    </div>\n</div>\n"],"names":["t0_value","ctx","insert","target","button","anchor","dirty","set_data","t0","div","codeblock_changes","t3_value","get_key","i","get_key_1","div1","append","strong0","div0","p","strong1","div2","table","div6","div9","div7","div8","current","t3","collection","$$props","responseTab","responses","response","div4","div5","toggle_class","switch_value","t1_value","t5_value","_a","_b","_c","_d","h3","p0","strong","p1","h6","div3","t1","t5","each_blocks","apiTabs","PasswordResetApiRequestDocs","PasswordResetApiConfirmDocs","activeApiTab","click_handler","$$invalidate","backendAbsUrl","CommonHelper","ApiClient"],"mappings":"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"}