{"version":3,"file":"UpdateApiDocs-CHdqKvx-.js","sources":["../../src/components/collections/docs/UpdateApiDocs.svelte"],"sourcesContent":["<script>\n    import CodeBlock from \"@/components/base/CodeBlock.svelte\";\n    import FieldsQueryParam from \"@/components/collections/docs/FieldsQueryParam.svelte\";\n    import SdkTabs from \"@/components/base/SdkTabs.svelte\";\n    import ApiClient from \"@/utils/ApiClient\";\n    import CommonHelper from \"@/utils/CommonHelper\";\n\n    export let collection;\n\n    let responseTab = 200;\n    let responses = [];\n\n    $: isAuth = collection?.type === \"auth\";\n\n    $: superusersOnly = collection?.updateRule === null;\n\n    $: excludedTableFields = isAuth ? [\"id\", \"password\", \"verified\", \"email\", \"emailVisibility\"] : [\"id\"];\n\n    $: tableFields =\n        collection?.fields?.filter((f) => {\n            return !f.hidden && f.type != \"autodate\" && !excludedTableFields.includes(f.name);\n        }) || [];\n\n    $: backendAbsUrl = CommonHelper.getApiExampleUrl(ApiClient.baseURL);\n\n    $: responses = [\n        {\n            code: 200,\n            body: JSON.stringify(CommonHelper.dummyCollectionRecord(collection), null, 2),\n        },\n        {\n            code: 400,\n            body: `\n                {\n                  \"status\": 400,\n                  \"message\": \"Failed to update record.\",\n                  \"data\": {\n                    \"${collection?.fields?.[0]?.name}\": {\n                      \"code\": \"validation_required\",\n                      \"message\": \"Missing required value.\"\n                    }\n                  }\n                }\n            `,\n        },\n        {\n            code: 403,\n            body: `\n                {\n                  \"status\": 403,\n                  \"message\": \"You are not allowed to perform this request.\",\n                  \"data\": {}\n                }\n            `,\n        },\n        {\n            code: 404,\n            body: `\n                {\n                  \"status\": 404,\n                  \"message\": \"The requested resource wasn't found.\",\n                  \"data\": {}\n                }\n            `,\n        },\n    ];\n\n    function getPayload(collection) {\n        let payload = CommonHelper.dummyCollectionSchemaData(collection, true);\n\n        if (isAuth) {\n            payload.oldPassword = \"12345678\";\n            payload.password = \"87654321\";\n            payload.passwordConfirm = \"87654321\";\n            delete payload.verified;\n            delete payload.email;\n        }\n\n        return payload;\n    }\n</script>\n\n<h3 class=\"m-b-sm\">Update ({collection.name})</h3>\n<div class=\"content txt-lg m-b-sm\">\n    <p>Update a single <strong>{collection.name}</strong> record.</p>\n    <p>\n        Body parameters could be sent as <code>application/json</code> or\n        <code>multipart/form-data</code>.\n    </p>\n    <p>\n        File upload is supported only via <code>multipart/form-data</code>.\n        <br />\n        For more info and examples you could check the detailed\n        <a href={import.meta.env.PB_FILE_UPLOAD_DOCS} target=\"_blank\" rel=\"noopener noreferrer\">\n            Files upload and handling docs\n        </a>.\n    </p>\n    {#if isAuth}\n        <p>\n            <em>\n                Note that in case of a password change all previously issued tokens for the current record\n                will be automatically invalidated and if you want your user to remain signed in you need to\n                reauthenticate manually after the update call.\n            </em>\n        </p>\n    {/if}\n</div>\n\n<!-- prettier-ignore -->\n<SdkTabs\n    js={`\nimport PocketBase from 'pocketbase';\n\nconst pb = new PocketBase('${backendAbsUrl}');\n\n...\n\n// example update data\nconst data = ${JSON.stringify(getPayload(collection), null, 4)};\n\nconst record = await pb.collection('${collection?.name}').update('RECORD_ID', data);\n    `}\n    dart={`\nimport 'package:pocketbase/pocketbase.dart';\n\nfinal pb = PocketBase('${backendAbsUrl}');\n\n...\n\n// example update body\nfinal body = <String, dynamic>${JSON.stringify(getPayload(collection), null, 2)};\n\nfinal record = await pb.collection('${collection?.name}').update('RECORD_ID', body: body);\n    `}\n/>\n\n<h6 class=\"m-b-xs\">API details</h6>\n<div class=\"alert alert-warning\">\n    <strong class=\"label label-primary\">PATCH</strong>\n    <div class=\"content\">\n        <p>\n            /api/collections/<strong>{collection.name}</strong>/records/<strong>:id</strong>\n        </p>\n    </div>\n    {#if superusersOnly}\n        <p class=\"txt-hint txt-sm txt-right\">Requires superuser <code>Authorization:TOKEN</code> header</p>\n    {/if}\n</div>\n\n<div class=\"section-title\">Path parameters</div>\n<table class=\"table-compact table-border m-b-base\">\n    <thead>\n        <tr>\n            <th>Param</th>\n            <th>Type</th>\n            <th width=\"60%\">Description</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>id</td>\n            <td>\n                <span class=\"label\">String</span>\n            </td>\n            <td>ID of the record to update.</td>\n        </tr>\n    </tbody>\n</table>\n\n<div class=\"section-title\">Body Parameters</div>\n<table class=\"table-compact table-border m-b-base\">\n    <thead>\n        <tr>\n            <th>Param</th>\n            <th>Type</th>\n            <th width=\"50%\">Description</th>\n        </tr>\n    </thead>\n    <tbody>\n        {#if isAuth}\n            <tr>\n                <td colspan=\"3\" class=\"txt-hint txt-bold\">Auth specific fields</td>\n            </tr>\n            <tr>\n                <td>\n                    <div class=\"inline-flex\">\n                        <span class=\"label label-warning\">Optional</span>\n                        <span>email</span>\n                    </div>\n                </td>\n                <td>\n                    <span class=\"label\">String</span>\n                </td>\n                <td>\n                    The auth record email address.\n                    <br />\n                    This field can be updated only by superusers or auth records with \"Manage\" access.\n                    <br />\n                    Regular accounts can update their email by calling \"Request email change\".\n                </td>\n            </tr>\n            <tr>\n                <td>\n                    <div class=\"inline-flex\">\n                        {#if collection?.fields?.find((f) => f.name == \"emailVisibility\")?.required}\n                            <span class=\"label label-success\">Required</span>\n                        {:else}\n                            <span class=\"label label-warning\">Optional</span>\n                        {/if}\n                        <span>emailVisibility</span>\n                    </div>\n                </td>\n                <td>\n                    <span class=\"label\">Boolean</span>\n                </td>\n                <td>Whether to show/hide the auth record email when fetching the record data.</td>\n            </tr>\n            <tr>\n                <td>\n                    <div class=\"inline-flex\">\n                        <span class=\"label label-warning\">Optional</span>\n                        <span>oldPassword</span>\n                    </div>\n                </td>\n                <td>\n                    <span class=\"label\">String</span>\n                </td>\n                <td>\n                    Old auth record password.\n                    <br />\n                    This field is required only when changing the record password. Superusers and auth records\n                    with \"Manage\" access can skip this field.\n                </td>\n            </tr>\n            <tr>\n                <td>\n                    <div class=\"inline-flex\">\n                        <span class=\"label label-warning\">Optional</span>\n                        <span>password</span>\n                    </div>\n                </td>\n                <td>\n                    <span class=\"label\">String</span>\n                </td>\n                <td>New auth record password.</td>\n            </tr>\n            <tr>\n                <td>\n                    <div class=\"inline-flex\">\n                        <span class=\"label label-warning\">Optional</span>\n                        <span>passwordConfirm</span>\n                    </div>\n                </td>\n                <td>\n                    <span class=\"label\">String</span>\n                </td>\n                <td>New auth record password confirmation.</td>\n            </tr>\n            <tr>\n                <td>\n                    <div class=\"inline-flex\">\n                        <span class=\"label label-warning\">Optional</span>\n                        <span>verified</span>\n                    </div>\n                </td>\n                <td>\n                    <span class=\"label\">Boolean</span>\n                </td>\n                <td>\n                    Indicates whether the auth record is verified or not.\n                    <br />\n                    This field can be set only by superusers or auth records with \"Manage\" access.\n                </td>\n            </tr>\n            <tr>\n                <td colspan=\"3\" class=\"txt-hint txt-bold\">Other fields</td>\n            </tr>\n        {/if}\n\n        {#each tableFields as field (field.name)}\n            <tr>\n                <td>\n                    <div class=\"inline-flex\">\n                        {#if field.required}\n                            <span class=\"label label-success\">Required</span>\n                        {:else}\n                            <span class=\"label label-warning\">Optional</span>\n                        {/if}\n                        <span>{field.name}</span>\n                    </div>\n                </td>\n                <td>\n                    <span class=\"label\">{CommonHelper.getFieldValueType(field)}</span>\n                </td>\n                <td>\n                    {#if field.type === \"text\"}\n                        Plain text value.\n                    {:else if field.type === \"number\"}\n                        Number value.\n                    {:else if field.type === \"json\"}\n                        JSON array or object.\n                    {:else if field.type === \"email\"}\n                        Email address.\n                    {:else if field.type === \"url\"}\n                        URL address.\n                    {:else if field.type === \"geoPoint\"}\n                        <code>{`{\"lon\":x,\"lat\":y}`}</code> object.\n                    {:else if field.type === \"file\"}\n                        File object.<br />\n                        Set to <code>null</code> to delete already uploaded file(s).\n                    {:else if field.type === \"relation\"}\n                        Relation record {field.maxSelect == 1 ? \"id\" : \"ids\"}.\n                    {/if}\n                </td>\n            </tr>\n        {/each}\n    </tbody>\n</table>\n\n<div class=\"section-title\">Query parameters</div>\n<table class=\"table-compact table-border m-b-lg\">\n    <thead>\n        <tr>\n            <th>Param</th>\n            <th>Type</th>\n            <th width=\"60%\">Description</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>expand</td>\n            <td>\n                <span class=\"label\">String</span>\n            </td>\n            <td>\n                Auto expand relations when returning the updated record. Ex.:\n                <CodeBlock content={`?expand=relField1,relField2.subRelField21`} />\n                Supports up to 6-levels depth nested relations expansion. <br />\n                The expanded relations will be appended to the record under the\n                <code>expand</code> property (eg. <code>{`\"expand\": {\"relField1\": {...}, ...}`}</code>). Only\n                the relations that the user has permissions to <strong>view</strong> will be expanded.\n            </td>\n        </tr>\n        <FieldsQueryParam />\n    </tbody>\n</table>\n\n<div class=\"section-title\">Responses</div>\n<div class=\"tabs\">\n    <div class=\"tabs-header compact combined left\">\n        {#each responses as response (response.code)}\n            <button\n                class=\"tab-item\"\n                class:active={responseTab === response.code}\n                on:click={() => (responseTab = response.code)}\n            >\n                {response.code}\n            </button>\n        {/each}\n    </div>\n    <div class=\"tabs-content\">\n        {#each responses as response (response.code)}\n            <div class=\"tab-item\" class:active={responseTab === response.code}>\n                <CodeBlock content={response.body} />\n            </div>\n        {/each}\n    </div>\n</div>\n"],"names":["insert","target","p","anchor","show_if","ctx","tr0","tr1","tr2","append","td4","div1","span3","td5","td6","tr3","tr4","tr5","tr6","tr7","span","t1_value","dirty","set_data","t1","br","code","CommonHelper","create_if_block_8","create_if_block","create_if_block_1","create_if_block_2","create_if_block_3","create_if_block_4","create_if_block_5","create_if_block_6","create_if_block_7","tr","td0","div","span0","td1","span1","td2","t3","t3_value","t0_value","button","t0","codeblock_changes","t5_value","t28_value","create_if_block_12","_a","_b","create_if_block_11","create_if_block_9","get_key","i","get_key_1","get_key_2","h3","div0","p0","strong0","p1","p2","h6","div2","strong1","p3","strong2","strong3","div3","table0","div4","table1","thead1","tbody1","div5","table2","thead2","tbody2","td3","br1","code3","code4","strong4","div6","div9","div7","div8","current","t5","t28","func","f","collection","$$props","responseTab","responses","getPayload","payload","isAuth","response","superusersOnly","$$invalidate","excludedTableFields","tableFields","_c","backendAbsUrl","ApiClient"],"mappings":"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"}